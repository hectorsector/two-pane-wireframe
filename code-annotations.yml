L1: The name of the workflow as it will appear in the "Actions" tab of the GitHub repository.





L7: The on keyword lets you define the events that trigger when the workflow is run. You can define multiple events here. For more information, see "Triggering a workflow."
L8: Add the workflow_dispatch event if you want to be able to manually run this workflow from the UI. For more information, see  workflow_dispatch.
L9-11: Add the push event, so that the workflow runs automatically every time a commit is pushed to a branch called main. For more information, see  push.  


L12: Add the pull_request event, so that the workflow runs automatically every time a pull request is created or updated. For more information, see pull_request.

L14-17: Modifies the default permissions granted to GITHUB_TOKEN. This will vary depending on the needs of your workflow. For more information, see "Assigning permissions to jobs."





L20-21: Creates a concurrency group for specific events, and uses the || operator to define fallback values. For more information, see "Using concurrency."

L22: Cancels any currently running job or workflow in the same concurrency group.

L24: Groups together all the jobs that run in the workflow file.
L25: Defines a job with the ID check-links that is stored within the jobs key.
L26: Configures the job to run on a GitHub-hosted runner or a self-hosted runner, depending on the repository running the workflow. In this example, the job will run on a self-hosted runner if the repository is named docs-internal and is within the github organization. If the repository doesn't match this path, then it will run on an ubuntu-latest runner hosted by GitHub. For more information on these options see "Choosing the runner for a job."
L27: Groups together all the steps that will run as part of the check-links job. Each job in a workflow has its own steps section.
L28-29: The uses keyword tells the job to retrieve the action named actions/checkout. This is an action that checks out your repository and downloads it to the runner, allowing you to run actions against your code (such as testing tools). You must use the checkout action any time your workflow will run against the repository's code or you are using an action defined in the repository.


L31-35: This step uses the actions/setup-node action to install the specified version of the Node.js software package on the runner, which gives you access to the npm command.





L37-38: The run keyword tells the job to execute a command on the runner. In this case, npm ci is used to install the npm software packages for the project.



L41-44: Uses the trilom/file-changes-action action to gather all the changed files. This example is pinned to a specific version of the action, using the a6ca26c14274c33b15e6499323aac178af06ad4b SHA.





L47-48: Lists the contents of files.json. This will be visible in the workflow run's log, and can be useful for debugging.


L50-58: This step uses run command to execute a script that is stored in the repository at script/rendered-content-link-checker.mjs and passes all the parameters it needs to run.









L60-67: This step also uses run command to execute a script that is stored in the repository at script/rendered-content-link-checker.mjs and passes a different set of parameters.